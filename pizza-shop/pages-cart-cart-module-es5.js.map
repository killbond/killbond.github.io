{"version":3,"sources":["webpack:///src/app/components/delivery/delivery.component.ts","webpack:///src/app/components/delivery/delivery.component.html","webpack:///src/app/components/delivery/delivery.module.ts","webpack:///src/app/pages/cart/cart-routing.module.ts","webpack:///src/app/pages/cart/cart.component.ts","webpack:///src/app/pages/cart/cart.component.html","webpack:///src/app/pages/cart/cart.module.ts"],"names":["DeliveryComponent","auth","faMapMarker","faPhone","type_id","address","phone","user","selector","templateUrl","styleUrls","DeliveryModule","declarations","exports","imports","routes","path","component","CartRoutingModule","forChild","cart","CartComponent","currency","modalService","faTrash","faArrowLeft","faSpinner","sending","errors","order","newOrder","addPositionsToOrder","submit","pipe","response","error","subscribe","createdOrder","open","successSend","centered","flush","get","item","positions","push","product_id","product","id","quantity","currency_id","active","delivery","coordinates","total","price","CartModule"],"mappings":"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","file":"pages-cart-cart-module-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { faMapMarkerAlt, faPhone } from \"@fortawesome/free-solid-svg-icons\";\nimport { ValidationBagInterface } from \"../../interfaces/validation-bag.interface\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-delivery',\n  templateUrl: './delivery.component.html',\n  styleUrls: ['./delivery.component.scss']\n})\nexport class DeliveryComponent implements OnInit {\n\n  faMapMarker = faMapMarkerAlt\n\n  faPhone = faPhone\n\n  type_id: number = 2\n\n  address: string = ''\n\n  phone: string = ''\n\n  @Input() errors: ValidationBagInterface\n\n  constructor(\n    private auth: AuthService,\n  ) {\n  }\n\n  get price(): number {\n    return this.type_id == 1 ? 5 : 0\n  }\n\n  ngOnInit(): void {\n    this.phone = this.auth.user?.phone || ''\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"form-check\">\n      <input [(ngModel)]=\"type_id\" [value]=\"2\" class=\"form-check-input\" id=\"takeaway\" name=\"type_id\" type=\"radio\">\n      <label class=\"form-check-label\" for=\"takeaway\">\n        Takeaway\n      </label>\n    </div>\n    <div class=\"form-check mt-2\">\n      <input [(ngModel)]=\"type_id\" [value]=\"1\" class=\"form-check-input\" id=\"delivery\" name=\"type_id\" type=\"radio\">\n      <label class=\"form-check-label\" for=\"delivery\">\n        Delivery to address:\n      </label>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"type_id == 1\" class=\"row mt-2\">\n  <div class=\"col-12\">\n    <div class=\"input-group\">\n      <input [(ngModel)]=\"address\"\n             [class.is-invalid]=\"errors?.hasOwnProperty('delivery.coordinates.address')\"\n             class=\"form-control rounded-left\"\n             name=\"address\"\n             type=\"text\">\n      <div class=\"input-group-append\">\n        <span class=\"input-group-text\">\n          <fa-icon [icon]=\"faMapMarker\"></fa-icon>\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-2\">\n  <div class=\"col-12\">\n    <label for=\"phone\">Your contact phone:</label>\n    <div class=\"input-group\">\n      <input [(ngModel)]=\"phone\"\n             [class.is-invalid]=\"errors?.hasOwnProperty('phone')\"\n             class=\"form-control rounded-left\"\n             id=\"phone\" name=\"phone\"\n             type=\"text\">\n      <div class=\"input-group-append\">\n          <span class=\"input-group-text\">\n            <fa-icon [icon]=\"faPhone\"></fa-icon>\n          </span>\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeliveryComponent } from './delivery.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\n\n\n@NgModule({\n  declarations: [\n    DeliveryComponent,\n  ],\n  exports: [\n    DeliveryComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FontAwesomeModule,\n  ]\n})\nexport class DeliveryModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CartComponent } from './cart.component';\n\nconst routes: Routes = [{path: '', component: CartComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CartRoutingModule {\n}\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild, } from '@angular/core';\nimport { CartService } from \"../../services/cart.service\";\nimport { faArrowLeft, faCircleNotch, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { DeliveryComponent } from \"../../components/delivery/delivery.component\";\nimport { CurrencyService } from \"../../services/currency.service\";\nimport { OrderInterface } from \"../../interfaces/order.interface\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { OrderResponseInterface } from \"../../interfaces/order-response.interface\";\nimport { catchError, finalize } from \"rxjs/operators\";\nimport { ApiResponseInterface } from \"../../interfaces/api-response.interface\";\nimport { of } from \"rxjs\";\nimport { ValidationBagInterface } from \"../../interfaces/validation-bag.interface\";\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss'],\n})\nexport class CartComponent implements OnInit {\n\n  faTrash = faTrash\n\n  faArrowLeft = faArrowLeft\n\n  faSpinner = faCircleNotch\n\n  @ViewChild('delivery') delivery: DeliveryComponent\n\n  @ViewChild('successSend') successSend: TemplateRef<ElementRef>\n\n  createdOrder: OrderResponseInterface\n\n  sending: boolean = false\n\n  errors: ValidationBagInterface = {}\n\n  constructor(\n    private currency: CurrencyService,\n    private modalService: NgbModal,\n    public cart: CartService,\n  ) {\n  }\n\n  get total(): number {\n    return this.cart.total() + (this.delivery?.price || 0)\n  }\n\n  ngOnInit(): void {\n  }\n\n  sendOrder(): void {\n    let order: OrderInterface = this.newOrder()\n    this.addPositionsToOrder(order)\n    this.sending = true\n    this.cart.submit(order)\n      .pipe(\n        catchError(({error: response}) => {\n          this.errors = (response as ApiResponseInterface).errors\n          return of()\n        }),\n        finalize(() => this.sending = false)\n      ).subscribe((order: OrderResponseInterface) => {\n      this.createdOrder = order\n      this.modalService.open(this.successSend, {centered: true})\n      this.cart.flush()\n    })\n\n  }\n\n  private addPositionsToOrder(order: OrderInterface): void {\n    for (let item of this.cart.get()) {\n      order.positions.push({\n        product_id: item.product.id,\n        quantity: item.quantity\n      })\n    }\n  }\n\n  private newOrder(): OrderInterface {\n    return {\n      currency_id: this.currency.active.id,\n      positions: [],\n      phone: this.delivery.phone,\n      delivery: {\n        type_id: this.delivery.type_id,\n        coordinates: {\n          address: this.delivery.address,\n        }\n      }\n    }\n  }\n\n}\n","<app-navbar></app-navbar>\n\n<div class=\"px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n  <h1 class=\"display-4\">Cart</h1>\n</div>\n\n<div *ngIf=\"cart.isEmpty()\" class=\"mx-auto text-center flex-grow-1 flex-shrink-0 d-flex align-items-center mb-5\">\n  <h1 class=\"lead\">Empty</h1>\n</div>\n\n<div *ngIf=\"!cart.isEmpty()\" class=\"container\">\n  <table class=\"table table-hover table-condensed\" id=\"cart\">\n    <thead>\n    <tr>\n      <th style=\"width:50%\">Product</th>\n      <th style=\"width:10%\">Price</th>\n      <th class=\"text-center\" style=\"width:12%\">Quantity</th>\n      <th class=\"text-center\" style=\"width:15%\">Subtotal</th>\n      <th style=\"width:13%\"></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let item of cart.get(); trackBy: ('id' | trackByProperty)\">\n      <td data-th=\"Product\">\n        <div class=\"row d-flex align-middle\">\n          <div class=\"col-sm-4 hidden-sm\">\n            <img class=\"img-responsive\" src=\"{{ item.product.image.url }}\"/>\n          </div>\n          <div class=\"col-sm-8 small d-flex flex-column justify-content-center product-body\">\n            <h4>{{ item.product.name }}</h4>\n            <p>{{ item.product.description }}</p>\n          </div>\n        </div>\n      </td>\n      <td data-th=\"Price\">{{ item.product.price | price }}</td>\n      <td data-th=\"Quantity\">\n        <app-input-stepper\n            #stepper\n            (valueChange)=\"cart.add(item.product, stepper.value - item.quantity)\"\n            [value]=\"item.quantity\">\n        </app-input-stepper>\n      </td>\n      <td class=\"text-md-center\" data-th=\"Subtotal\">{{ (item.product.price * stepper.value) | price }}</td>\n      <td class=\"actions\" data-th=\"\">\n        <button (click)=\"cart.remove(item.product)\" class=\"btn btn-danger btn-sm w-100\">\n          <fa-icon [icon]=\"faTrash\"></fa-icon>\n          <span class=\"ml-2\">Remove</span>\n        </button>\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"3\" data-th=\"Delivery\">\n        <app-delivery #delivery [errors]=\"errors\"></app-delivery>\n      </td>\n      <td class=\"text-md-center\" data-th=\"Total\">\n        {{ delivery.price | price }}\n      </td>\n      <td class=\"hidden-sm\"></td>\n    </tr>\n    </tbody>\n    <tfoot>\n    <tr>\n      <td>\n        <a [routerLink]=\"['/menu']\" class=\"btn btn-outline-primary\">\n          <fa-icon [icon]=\"faArrowLeft\" class=\"mr-2\"></fa-icon>\n          Continue Shopping\n        </a>\n      </td>\n      <td class=\"hidden-sm\" colspan=\"2\"></td>\n      <td class=\"hidden-sm text-center\"><strong>Total <span>{{ total | price }}</span></strong></td>\n      <td>\n        <button (click)=\"sendOrder()\" [disabled]=\"sending\" class=\"btn btn-success btn-block\">\n          <fa-icon *ngIf=\"sending\" [icon]=\"faSpinner\" [spin]=\"true\"></fa-icon>\n          Checkout\n        </button>\n      </td>\n    </tr>\n    </tfoot>\n  </table>\n</div>\n\n<ng-template #successSend let-modal>\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <button (click)=\"modal.close('Close click')\" class=\"close\" data-dismiss=\"modal\" type=\"button\">\n        <span>×</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"thank-you-pop\">\n        <img alt=\"\" src=\"/assets/images/Green-Round-Tick.png\">\n        <h1>Thank You!</h1>\n        <p>Your submission is received and we will contact you soon</p>\n        <h3 class=\"cupon-pop\">Your order ID: <span>#{{ createdOrder.id }}</span></h3>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CartRoutingModule } from './cart-routing.module';\nimport { CartComponent } from './cart.component';\nimport { SharedModule } from \"../../shared.module\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { DeliveryModule } from \"../../components/delivery/delivery.module\";\nimport { InputStepperModule } from \"../../components/input-stepper/input-stepper.module\";\nimport { NavbarModule } from \"../../components/navbar/navbar.module\";\n\n\n@NgModule({\n  declarations: [CartComponent],\n  imports: [\n    CommonModule,\n    CartRoutingModule,\n    SharedModule,\n    FontAwesomeModule,\n    NavbarModule,\n    DeliveryModule,\n    InputStepperModule,\n  ]\n})\nexport class CartModule {\n}\n"]}