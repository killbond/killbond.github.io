{"version":3,"sources":["webpack:///src/app/components/product-card/product-card.component.ts","webpack:///src/app/components/product-card/product-card.component.html","webpack:///src/app/components/product-card/product-card.module.ts","webpack:///src/app/pages/menu/menu-routing.module.ts","webpack:///src/app/pages/menu/menu.component.ts","webpack:///src/app/pages/menu/menu.component.html","webpack:///src/app/pages/menu/menu.module.ts","webpack:///src/app/services/category.service.ts","webpack:///src/app/services/product.service.ts"],"names":["ProductCardComponent","added","stepper","product","emit","quantity","value","addClickHandler","selector","templateUrl","styleUrls","host","ProductCardModule","declarations","exports","imports","routes","path","component","MenuRoutingModule","forChild","MenuComponent","categoryService","productService","cart","getPizzas","getProducts","getCategories","subscribe","data","pizzas","products","categories","filter","category","id","event","add","items","item","category_id","MenuModule","CategoryService","api","get","pipe","providedIn","ProductService"],"mappings":"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","file":"pages-menu-menu-module-es5.js","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ProductInterface } from \"../../interfaces/product.interface\";\nimport { PizzaInterface } from \"../../interfaces/pizza.interface\";\nimport { InputStepperComponent } from \"../input-stepper/input-stepper.component\";\n\n@Component({\n  selector: 'app-product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.scss'],\n  host: {'class': 'card'}\n})\nexport class ProductCardComponent<T extends ProductInterface | PizzaInterface> {\n\n  @Input() product: T\n\n  @Output('added') added: EventEmitter<{ product: T, quantity: number }> = new EventEmitter()\n\n  public addClickHandler(stepper: InputStepperComponent, product: T): void {\n    this.added.emit({\n      product: product,\n      quantity: stepper.value\n    })\n    stepper.value = 1\n  }\n}\n","<img alt=\"Card image cap\" class=\"card-img-top\" src=\"{{ product.image.url }}\">\n<div class=\"card-body d-flex flex-column justify-content-between\">\n  <div>\n    <div class=\"card-title d-flex justify-content-between\">\n      <span>{{ product.name }}</span>\n      <span class=\"text-success font-weight-bold\">{{ (product.price * stepper.value) | price }}</span>\n    </div>\n    <p class=\"text-muted small\">{{ product.description }}</p>\n  </div>\n  <div class=\"d-flex justify-content-between align-middle\">\n    <app-input-stepper #stepper class=\"input-stepper\"></app-input-stepper>\n    <button (click)=\"addClickHandler(stepper, product)\" class=\"btn btn-sm btn-primary\" type=\"button\">\n      Add to cart\n    </button>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductCardComponent } from './product-card.component';\nimport { InputStepperModule } from \"../input-stepper/input-stepper.module\";\nimport { SharedModule } from \"../../shared.module\";\n\n@NgModule({\n  declarations: [\n    ProductCardComponent,\n  ],\n  exports: [\n    ProductCardComponent,\n  ],\n  imports: [\n    CommonModule,\n    InputStepperModule,\n    SharedModule,\n  ]\n})\nexport class ProductCardModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MenuComponent } from './menu.component';\n\nconst routes: Routes = [{path: '', component: MenuComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MenuRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { combineLatest } from \"rxjs\";\nimport { PizzaInterface } from \"../../interfaces/pizza.interface\";\nimport { CategoryInterface } from \"../../interfaces/category.interface\";\nimport { ProductInterface } from \"../../interfaces/product.interface\";\nimport { CartService } from \"../../services/cart.service\";\nimport { ProductService } from \"../../services/product.service\";\nimport { CategoryService } from \"../../services/category.service\";\n\ntype Item = ProductInterface | PizzaInterface\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  pizzas: PizzaInterface[]\n\n  products: ProductInterface[]\n\n  categories: CategoryInterface[]\n\n  constructor(\n    private categoryService: CategoryService,\n    private productService: ProductService,\n    private cart: CartService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    combineLatest([\n      this.productService.getPizzas(),\n      this.productService.getProducts(),\n      this.categoryService.getCategories(),\n    ]).subscribe((data: [PizzaInterface[], ProductInterface[], CategoryInterface[]]) => {\n      let [pizzas, products, categories] = data\n      this.categories = categories.filter((category: CategoryInterface) => category.id != 1)\n      this.products = products\n      this.pizzas = pizzas\n    })\n  }\n\n  addToCart(event: { product: Item, quantity: number }): void {\n    this.cart.add(event.product, event.quantity)\n  }\n\n  filterByCategoryId<T extends ProductInterface>(items: T[], id: number): T[] {\n    return items.filter((item: T) => item.category_id === id)\n  }\n\n}\n","<app-navbar></app-navbar>\n\n<div class=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n  <h1 class=\"display-4\">Pizza</h1>\n</div>\n\n<div class=\"container\">\n  <div class=\"card-deck mb-3 flex-wrap\">\n    <app-product-card\n        (added)=\"addToCart($event)\"\n        *ngFor=\"let pizza of pizzas; trackBy: ( 'id' | trackByProperty )\"\n        [product]=\"pizza\"\n        class=\"mb-4\">\n    </app-product-card>\n  </div>\n</div>\n\n<ng-container *ngFor=\"let category of categories; trackBy: ( 'id' | trackByProperty )\">\n  <div class=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n    <h1 class=\"display-4\">{{ category.name }}</h1>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"card-deck mb-3 flex-wrap\">\n      <app-product-card\n          (added)=\"addToCart($event)\"\n          *ngFor=\"let product of filterByCategoryId(products, category.id); trackBy: ( 'id' | trackByProperty )\"\n          [product]=\"product\"\n          class=\"mb-4\">\n      </app-product-card>\n    </div>\n  </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MenuRoutingModule } from './menu-routing.module';\nimport { MenuComponent } from './menu.component';\nimport { SharedModule } from \"../../shared.module\";\nimport { ProductCardModule } from \"../../components/product-card/product-card.module\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { NavbarModule } from \"../../components/navbar/navbar.module\";\n\n\n@NgModule({\n  declarations: [MenuComponent],\n  imports: [\n    CommonModule,\n    MenuRoutingModule,\n    ProductCardModule,\n    NavbarModule,\n    FontAwesomeModule,\n    SharedModule,\n  ]\n})\nexport class MenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { CategoryInterface } from \"../interfaces/category.interface\";\nimport { ApiService } from \"./api.service\";\nimport { Observable, of } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  private categories: CategoryInterface[] = null\n\n  constructor(\n    private api: ApiService\n  ) {\n  }\n\n  getCategories(): Observable<CategoryInterface[]> {\n    if (null !== this.categories) {\n      return of(this.categories)\n    }\n\n    return this.api.get('categories')\n      .pipe(tap((categories: CategoryInterface[]) => this.categories = categories))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from \"rxjs\";\nimport { PizzaInterface } from \"../interfaces/pizza.interface\";\nimport { ProductInterface } from \"../interfaces/product.interface\";\nimport { ApiService } from \"./api.service\";\nimport { tap } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private pizzas: PizzaInterface[] = null\n\n  private products: ProductInterface[] = null\n\n  constructor(\n    private api: ApiService\n  ) {\n  }\n\n  getPizzas(): Observable<PizzaInterface[]> {\n    if (null !== this.pizzas) {\n      return of(this.pizzas)\n    }\n\n    return this.api.get('pizzas')\n      .pipe(tap((pizzas: PizzaInterface[]) => this.pizzas = pizzas))\n  }\n\n  getProducts(): Observable<ProductInterface[]> {\n    if (null !== this.products) {\n      return of(this.products)\n    }\n\n    return this.api.get('products')\n      .pipe(tap((products: ProductInterface[]) => this.products = products))\n  }\n}\n"]}