{"version":3,"sources":["./src/app/pages/register/register-routing.module.ts","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/pages/register/register.module.ts","./src/app/services/user.service.ts"],"names":[],"mappings":"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","file":"pages-register-register-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [{path: '', component: RegisterComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ValidationBagInterface } from \"../../interfaces/validation-bag.interface\";\nimport { UserService } from \"../../services/user.service\";\nimport { UserCreateRequestInterface } from \"../../interfaces/user-create-request.interface\";\nimport { catchError, finalize, switchMap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { ApiResponseInterface } from \"../../interfaces/api-response.interface\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  faSpinner = faCircleNotch\n\n  email: string\n\n  password: string\n\n  passwordConfirmation: string\n\n  name: string\n\n  phone: string\n\n  errors: ValidationBagInterface = {}\n\n  sending: boolean = false\n\n  constructor(\n    private userService: UserService,\n    private auth: AuthService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  register(): void {\n    this.userService.register(this.newUser())\n      .pipe(\n        catchError(this.errorHandling.bind(this)),\n        finalize(() => this.sending = false),\n        switchMap(() => this.auth.login(this.email, this.password)),\n        switchMap(() => this.router.navigate(['/menu'])),\n      ).subscribe()\n  }\n\n  private errorHandling({error: response}): Observable<void> {\n    if (response.hasOwnProperty('errors')) {\n      this.errors = (response as ApiResponseInterface).errors\n    }\n    return of()\n  }\n\n  private newUser(): UserCreateRequestInterface {\n    return {\n      name: this.name,\n      password: this.password,\n      password_confirmation: this.passwordConfirmation,\n      email: this.email,\n      phone: this.phone,\n    }\n  }\n\n}\n","<div class=\"register-form\">\n  <form (ngSubmit)=\"register()\">\n    <h2 class=\"text-center\">Log in</h2>\n    <div class=\"form-group\">\n      <input [(ngModel)]=\"name\"\n             [class.is-invalid]=\"errors.hasOwnProperty('name')\"\n             class=\"form-control\"\n             name=\"name\"\n             placeholder=\"Name\"\n             required\n             type=\"text\">\n      <div *ngFor=\"let message of errors.name\" class=\"invalid-feedback\">{{ message }}</div>\n    </div>\n    <div class=\"form-group\">\n      <input [(ngModel)]=\"email\"\n             [class.is-invalid]=\"errors.hasOwnProperty('email')\"\n             class=\"form-control\"\n             name=\"email\"\n             placeholder=\"Email\"\n             required\n             type=\"text\">\n      <div *ngFor=\"let message of errors.email\" class=\"invalid-feedback\">{{ message }}</div>\n    </div>\n    <div class=\"form-group\">\n      <input [(ngModel)]=\"phone\"\n             [class.is-invalid]=\"errors.hasOwnProperty('phone')\"\n             class=\"form-control\"\n             name=\"phone\"\n             placeholder=\"Phone\"\n             required\n             type=\"text\">\n      <div *ngFor=\"let message of errors.phone\" class=\"invalid-feedback\">{{ message }}</div>\n    </div>\n    <div class=\"form-group\">\n      <input [(ngModel)]=\"password\"\n             [class.is-invalid]=\"errors.hasOwnProperty('password')\"\n             class=\"form-control\"\n             name=\"password\"\n             placeholder=\"Password\"\n             required\n             type=\"password\">\n      <div *ngFor=\"let message of errors.password\" class=\"invalid-feedback\">{{ message }}</div>\n    </div>\n    <div class=\"form-group\">\n      <input [(ngModel)]=\"passwordConfirmation\"\n             [class.is-invalid]=\"errors.hasOwnProperty('password_confirmation')\"\n             class=\"form-control\"\n             name=\"password_confirmation\"\n             placeholder=\"Password confirmation\"\n             required\n             type=\"password\">\n      <div *ngFor=\"let message of errors.password_confirmation\" class=\"invalid-feedback\">{{ message }}</div>\n    </div>\n    <div class=\"form-group\">\n      <button [disabled]=\"sending\" class=\"btn btn-primary btn-block\" type=\"submit\">\n        <fa-icon *ngIf=\"sending\" [icon]=\"faSpinner\" [spin]=\"true\"></fa-icon>\n        Register\n      </button>\n    </div>\n  </form>\n  <div class=\"d-flex justify-content-around\">\n    <a [routerLink]=\"['/menu']\">Back to menu</a>\n    <a [routerLink]=\"['/login']\">Log in</a>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register.component';\nimport { SharedModule } from \"../../shared.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\n\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    FormsModule,\n    FontAwesomeModule,\n    SharedModule,\n  ]\n})\nexport class RegisterModule {\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from \"./api.service\";\nimport { Observable } from \"rxjs\";\nimport { UserCreateRequestInterface } from \"../interfaces/user-create-request.interface\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private api: ApiService\n  ) {\n  }\n\n  register(user: UserCreateRequestInterface): Observable<any> {\n    return this.api.post('users', user)\n  }\n}\n"],"sourceRoot":"webpack:///"}